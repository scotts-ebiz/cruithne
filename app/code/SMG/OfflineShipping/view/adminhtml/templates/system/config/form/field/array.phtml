<?php
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

// @codingStandardsIgnoreFile

?>

<?php
$_htmlId = $block->getHtmlId() ? $block->getHtmlId() : '_' . uniqid();
$_colspan = $block->isAddAfter() ? 2 : 1;
?>

<div class="design_theme_ua_regexp" id="grid<?= /* @escapeNotVerified */ $_htmlId ?>">
    <div class="admin__control-table-wrapper">
        <table class="admin__control-table" id="<?= /* @escapeNotVerified */ $block->getElement()->getId() ?>">
            <thead>
                <tr>
                    <?php foreach ($block->getColumns() as $columnName => $column): ?>
                        <th><?= /* @escapeNotVerified */ $column['label'] ?></th>
                    <?php endforeach;?>
                </tr>
            </thead>
            <?php if ($block->allowAddRow()): ?>
                <tfoot>
                    <tr>
                        <td colspan="<?= count($block->getColumns())+$_colspan ?>" class="col-actions-add">
                            <button id="addToEndBtn<?= /* @escapeNotVerified */ $_htmlId ?>" class="action-add" title="<?= /* @escapeNotVerified */ __('Add') ?>" type="button">
                                <span><?= /* @escapeNotVerified */ $block->getAddButtonLabel() ?></span>
                            </button>
                        </td>
                    </tr>
                </tfoot>
            <?php endif; ?>
            <tbody id="addRow<?= /* @escapeNotVerified */ $_htmlId ?>"></tbody>
        </table>
    </div>
    <input type="hidden" name="<?= /* @escapeNotVerified */ $block->getElement()->getName() ?>[__empty]" value="" />

    <script>
        require([
            'mage/template',
            'prototype'
        ], function (mageTemplate) {
            // create row creator
            window.arrayRow<?= /* @escapeNotVerified */ $_htmlId ?> = {

                // define row prototypeJS template
                template: mageTemplate(
                    '<tr id="<%- _id %>">'
                    <?php foreach ($block->getColumns() as $columnName => $column): ?>
                    + '<td>'
                    + '<?= /* @escapeNotVerified */ $block->renderCellTemplate($columnName) ?>'
                    + '<\/td>'
                    <?php endforeach; ?>

                    <?php if ($block->isAddAfter()): ?>
                    + '<td><button class="action-add" type="button" id="addAfterBtn<%- _id %>"><span><?= /* @escapeNotVerified */ __('Add after') ?><\/span><\/button><\/td>'
                    <?php endif; ?>
                    +'<\/tr>'
                ),

                add: function(rowData, insertAfterId) {
                    // generate default template data
                    var templateValues;

                    // Prepare template values
                    var d = new Date();
                    templateValues = {
                    <?php foreach ($block->getColumns() as $columnName => $column): ?>
                        <?= /* @escapeNotVerified */ $columnName ?>: '',
                            'option_extra_attrs': {},
                            '<?= $columnName ?>_disabled': <?= $column['editable'] ? 'false' : 'true' ?>,
                            '<?= $columnName ?>_input_type': '<?= $column['input_type'] ?? 'text' ?>',
                        <?php endforeach; ?>
                        _id: '_' + d.getTime() + '_' + d.getMilliseconds()
                    };
                    if (rowData) {
                        templateValues = Object.assign(templateValues, rowData);
                    }

                    // Insert new row after specified row or at the bottom
                    if (insertAfterId) {
                        Element.insert($(insertAfterId), {after: this.template(templateValues)});
                    } else {
                        Element.insert($('addRow<?= /* @escapeNotVerified */ $_htmlId ?>'), {bottom: this.template(templateValues)});
                    }

                    // Fill controls with data
                    if (rowData) {
                        var rowInputElementNames = Object.keys(rowData.column_values);
                        for (var i = 0; i < rowInputElementNames.length; i++) {
                            if ($(rowInputElementNames[i])) {
                                $(rowInputElementNames[i]).setValue(rowData.column_values[rowInputElementNames[i]]);
                            }
                        }
                    }

                    // Add event for {addAfterBtn} button
                    <?php if ($block->isAddAfter()): ?>
                    Event.observe('addAfterBtn' + templateValues._id, 'click', this.add.bind(this, false, templateValues._id));
                    <?php endif; ?>
                },

                del: function(rowId) {
                    $(rowId).remove();
                }
            };

            <?php if ($block->allowAddRow()): ?>
                // bind add action to "Add" button in last row
                Event.observe('addToEndBtn<?= /* @escapeNotVerified */ $_htmlId ?>', 'click', arrayRow<?= /* @escapeNotVerified */ $_htmlId ?>.add.bind(arrayRow<?= /* @escapeNotVerified */ $_htmlId ?>, false, false));
            <?php endif; ?>

            // add existing rows
            <?php
            foreach ($block->getArrayRows() as $_rowId => $_row) {
                /* @escapeNotVerified */ echo "arrayRow{$_htmlId}.add(" . $_row->toJson() . ");\n";
            }
            ?>

            // Toggle the grid availability, if element is disabled (depending on scope)
            <?php if ($block->getElement()->getDisabled()):?>
            toggleValueElements({checked: true}, $('grid<?= /* @escapeNotVerified */ $_htmlId ?>').parentNode);
            <?php endif;?>
        });
    </script>
</div>
