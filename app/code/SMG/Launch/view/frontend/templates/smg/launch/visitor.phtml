<?php
$smghelper = $this->helper('SMG\Launch\Helper\Data');
$store = $smghelper->getStoremangerInterface()->getStore()->getCode();
$helper = $block->getHelper();

if (!$helper->isSmgEnabled($store)) {
    return;
}

$cart_id = $smghelper->getCheckoutCart()->getQuote()->getId();
$script = $helper->getScript($store);
$request = $smghelper->getActionContext()->getRequest();
$currentPage = $request->getFullActionName();

$cmsPage = $smghelper->getCmspagemanager();
$currentcmspage = $cmsPage->getIdentifier();

$subTotal = $smghelper->getCheckoutCart()->getQuote()->getSubtotal();
$items = $smghelper->getCheckoutCart()->getQuote()->getAllItems();

if($currentPage == 'checkout_index_index'){
    $name = 'shipping info';
} else {
    $name = $block->getLayout()->getBlock('page.main.title')->getPageTitle();
}

$type = '';
if($currentPage == 'cms_index_index'){
    $type = 'home';
}else if($currentPage == 'catalog_category_view'){
    $type = 'collection';
}else if($currentPage == 'catalog_product_view'){
    $type = 'product';
}else if($currentPage == 'checkout_cart_index'){
    $type = 'cart';
}else if($currentPage == 'checkout_index_index'){
    $type = 'checkout';
}else if($currentPage == 'customer_account_index'){
    $type = 'customer';
}else if($currentPage == 'customer_account_login'){
    $type = 'login';
}else if($currentPage == 'customer_account_create'){
    $type = 'register';
}else if($currentPage == 'wishlist_index_index'){
    $type = 'wishlist';
}else if($currentPage == 'wishlist_index_share'){
    $type = 'wishlist_share';
}else if($currentPage == 'sales_order_history'){
    $type = 'order_history';
}else if($currentPage == 'customer_address_form'){
    $type = 'new_address';
}else if($currentPage == 'customer_account_edit'){
    $type = 'account_edit';
}else if($currentPage == 'newsletter_manage_index'){
    $type = 'newsletter_manage';
}else if($currentPage == 'vantiv_recurring_index'){
    $type = 'vantive_recurring';
}else if($currentPage == 'downloadable_customer_products'){
    $type = 'downloadable_product';
}else if($currentPage == 'catalog_product_compare_index'){
    $type = 'compare';
}else if($currentPage == 'checkout_onepage_success'){
    $type = 'order_success';
}else if($currentPage == 'catalogsearch_result_index'){
    $type = 'search';
}else if($currentPage == 'cms_noroute_index'){
    $type = '404';
}
/*--- cms page ---*/
if($currentcmspage == 'warranty'){
	$type = 'warranty';
	$name = $cmsPage->getTitle();
}else if($currentcmspage == 'groconnect'){
	$type = 'groconnect';
	$name = $cmsPage->getTitle();
}else if($currentcmspage == 'integrations'){
	$type = 'integrations';
	$name = $cmsPage->getTitle();
}else if($currentcmspage == 'privacy-policy'){
	$type = 'privacy-policy';
	$name = $cmsPage->getTitle();
}else if($currentcmspage == 'terms-and-conditions'){
	$type = 'terms-and-conditions';
	$name = $cmsPage->getTitle();
}else if($currentcmspage == 'mygro-rebates'){
	$type = 'mygro-rebates';
	$name = $cmsPage->getTitle();
}else if($currentcmspage == 'return-policy'){
	$type = 'return-policy';
	$name = $cmsPage->getTitle();
}
?>
<!-- Adobe Launch Code -->
<script src="<?php echo $script?>"></script>
<script>
    window.dtmData = {
        events: [],
        page: {
            cms: 'M2',
            type: '<?php echo $block->escapeHtml($type);?>',
            name: '<?php echo $block->escapeHtml(str_replace("™","",$name)); ?>',
            <?php if($currentPage == 'catalog_category_view'){ ?>
            channel: 'catalog',
            content_type: 'productcatalog',
            <?php } ?>
            <?php if($currentPage == 'catalog_product_view'){ ?>
            type: 'product',
            <?php } ?>
            <?php if($currentPage == 'catalogsearch_result_index'){ ?>
            type: 'search',
            <?php } ?>
            <?php if($currentPage == 'checkout_onepage_success'){ ?>
            type: 'confirmation',
            <?php } ?>
            site: '<?php echo $block->escapeHtml($store);?>',
            preffered_local: 'english',
            rendered_local: 'english'
        },
        <?php if($smghelper->getCustomerSession()->isLoggedIn()) {?>
        user: {
            userId: '<?php echo $block->escapeHtml($smghelper->getCustomerSession()->getCustomer()->getId());?>',
            email: '<?php echo $block->escapeHtml($smghelper->getCustomerSession()->getCustomer()->getEmail());?>',
            isLoggedIn: 1,
            zip: '',
            cartId: '<?php echo $block->escapeHtml($cart_id);?>'
        },
        <?php }else{?>
        user: {
            userId: '',
            email: '',
            isLoggedIn: 0,
            zip: '',
            cartId: '<?php echo $block->escapeHtml($cart_id);?>'
        },
        <?php } ?>
        <?php if($currentPage != 'checkout_onepage_success'){ ?>
        cart: {
            currency: '<?php echo $block->escapeHtml($smghelper->getCheckoutCart()->getQuote()->getBaseCurrencyCode());?>',
            subtotal: '<?php echo $block->escapeHtml($subTotal);?>',
            promoCode: '<?php echo $block->escapeHtml($smghelper->getCheckoutCart()->getQuote()->getCouponCode());?>',
            lineItems: [
                <?php foreach($items as $item) {
                // If there is a child product with a parent that is not configurable, we do not want to include it.
                if($item->getParentItem()){
                    if (!$item->getParentItem()->getProductType() === "configurable") {
                        continue;
                    }
                }
                // If there is a configurable product, we don't want to include it,
                // but we will include its children because of the exception we made above
                if ($item->getProductType() === "configurable") {
                    continue;
                }

                $product = $smghelper->getProduct()->load($item->getProductId());
                $store = $smghelper->getStoremangerInterface()->getStore();
                $productImageUrl = '';
                if($product->getImage()){
                    $productImageUrl = $store->getBaseUrl(\Magento\Framework\UrlInterface::URL_TYPE_MEDIA) . 'catalog/product' . $product->getImage();
                }
                $productUrl  = $product->getProductUrl();

                $categoryIds = $product->getCategoryIds();
                $categories = $smghelper->getCategoryCollection()->create()
                    ->addAttributeToSelect('*')
                    ->addAttributeToFilter('entity_id', $categoryIds);
                $cats = [];
                foreach ($categories as $category) {
                    $cats[] = $category->getName();
                }
                ?>
                {
                    id: '<?php echo $block->escapeHtml($item->getProductId());?>',
                    name: '<?php $p_name = $item->getName(); echo $block->escapeHtml(str_replace("™","",$p_name)); ?>',
                    category: [
                        <?php foreach ($categories as $category) {?>
                        '<?php echo $block->escapeHtml($category->getName());?>',
                        <?php } ?>
                    ],
                    currency: '<?php echo $block->escapeHtml($smghelper->getCheckoutCart()->getQuote()->getBaseCurrencyCode());?>',
                    unitPrice: <?php echo $block->escapeHtml($item->getPrice());?>,
                    sku: '<?php echo $block->escapeHtml($item->getSku());?>',
                    imageUrl: '<?php echo $block->escapeUrl($productImageUrl);?>',
                    quantity: <?php echo $block->escapeHtml($item->getQty());?>,
                    url: '<?php echo $block->escapeUrl($productUrl);?>'
                }<?php if (!($item === end($items))) { echo ','; } ?>
                <?php } ?>
            ]
        },
        <?php } ?>
        <?php if($currentPage == 'catalog_category_view'){
        $cat = $smghelper->getRegistry()->registry('current_category');
        $category = $smghelper->getCatalogCategory()->load($cat->getId());
        $product_count = $category->getProductCount(); ?>
        listing: {
            resultCount:'<?php echo $block->escapeHtml($product_count);?>',
            layout: '<?php if(isset($_REQUEST['product_list_mode'])){ echo $block->escapeHtml($_REQUEST['product_list_mode']); }else{ echo "grid"; } ?>',
            pageName: '<?php echo $block->escapeHtml($name);?>',
        }
        <?php } ?>
        <?php if($currentPage == 'catalog_product_view'){
        $pro = $smghelper->getRegistry()->registry('current_product');
        $product = $smghelper->getProduct()->load($pro->getId());
        ?>
        product: {
            id: '<?php echo $block->escapeHtml($product->getId())?>',
            product_category_id: '<?php echo $block->escapeHtml(implode(',',$product->getCategoryIds()));?>',
            purchase_online: <?php echo $block->escapeHtml($product->getStatus());?> ,
            name: '<?php $p_name = $product->getName(); echo $block->escapeHtml(str_replace("™","",$p_name)); ?> ',
            currency: '<?php echo $block->escapeHtml($smghelper->getCheckoutCart()->getQuote()->getBaseCurrencyCode());?>',
            unitPrice: '<?php echo $block->escapeHtml($product->getPrice()); ?>',
            sku: '<?php echo $block->escapeHtml($product->getSku()); ?>',
            inStock: <?php echo $block->escapeHtml($product->getIsSalable()); ?>

        }
        <?php } ?>
        <?php if($currentPage == 'catalogsearch_result_index'){ ?>
        listing: {
            query: '<?php echo $block->escapeHtml($_REQUEST['q']);?>',
            sortBy: '<?php if(isset($_REQUEST['product_list_order'])){ echo $block->escapeHtml($_REQUEST['product_list_order']); }else{ echo "default"; } ?>',
            layout: '<?php if(isset($_REQUEST['product_list_mode'])){ echo $block->escapeHtml($_REQUEST['product_list_mode']); }else{ echo "grid"; } ?>',
            pageName: "<?php echo $block->escapeHtml($block->getLayout()->getBlock('page.main.title')->getPageTitle()); ?>",
        }
        <?php } ?>
        <?php if($currentPage == 'checkout_onepage_success'){

        $order = $smghelper->getCheckoutSession()->getLastRealOrder();
        $orderId = $order->getId();
        $items = $order->getAllVisibleItems();
        ?>
        transaction: {
            orderId: '<?php echo $block->escapeHtml($orderId);?>',
            currency: '<?php echo $block->escapeHtml($order->getOrderCurrencyCode()); ?>',
            subtotal: '<?php echo $block->escapeHtml((float)$order->getSubtotal()); ?>',
            shippingCost: <?php echo $block->escapeHtml((float)$order->getShippingAmount()); ?>,
            tax: <?php echo $block->escapeHtml((float)$order->getTaxAmount()); ?>,
            total: <?php echo $block->escapeHtml((float)$order->getGrandTotal()); ?>,
            paymentMethod: '<?php echo $block->escapeHtml($order->getPaymentMethod()); ?>',
            shippingMethod: '<?php echo $block->escapeHtml($order->getShippingMethod()); ?>',
            lineItems: [
                <?php foreach($items as $item) {
                $product = $smghelper->getProduct()->load($item->getProductId());
                $store = $smghelper->getStoremangerInterface()->getStore();
                $productImageUrl = '';
                if($product->getImage()){
                    $productImageUrl = $store->getBaseUrl(\Magento\Framework\UrlInterface::URL_TYPE_MEDIA) . 'catalog/product' . $product->getImage();
                }
                $productUrl  = $product->getProductUrl();

                $categoryIds = $product->getCategoryIds();
                $categories = $smghelper->getCategoryCollection()->create()
                    ->addAttributeToSelect('*')
                    ->addAttributeToFilter('entity_id', $categoryIds);
                $cats = [];
                foreach ($categories as $category) {
                    $cats[] = $category->getName();
                }
                ?>
                {
                    id: '<?php echo $block->escapeHtml($item->getProductId());?>',
                    name: '<?php $p_name = $item->getName(); echo $block->escapeHtml(str_replace("™","",$p_name)); ?>',
                    category: [
                        <?php foreach ($categories as $category) {?>
                        '<?php echo $block->escapeHtml($category->getName());?>',
                        <?php } ?>
                    ],
                    currency: '<?php echo $block->escapeHtml($order->getOrderCurrencyCode());?>',
                    unitPrice: <?php echo $block->escapeHtml($item->getPrice());?>,
                    sku: '<?php echo $block->escapeHtml($item->getSku());?>',
                    imageUrl: '<?php echo $block->escapeUrl($productImageUrl);?>',
                    quantity: <?php echo $block->escapeHtml($item->getQty());?>,
                    url: '<?php echo $block->escapeUrl($productUrl);?>'
                },
                <?php } ?>
            ]
        }
        <?php } ?>

    }

    <?php if($currentPage == 'catalog_category_view'){ ?>
    <?php if(isset($_REQUEST)){
    $filters = array();
    foreach($_REQUEST as $key=>$data){
        if($key == 'product_list_mode' || $key == 'q' || $key == 'product_list_order'){
            continue;
        }
        $filters['key'][] = $key;
        $filters['val'][] = $data;
    } ?>
    <?php if(count($filters)>0 ){ ?>
    window.dtmData.events.push({
        name: 'filterApplied',
        filterType: '<?php echo $block->escapeJs(implode(',',$filters['key']));?>',
        filterValue: '<?php echo $block->escapeJs(preg_replace("/[()\/]/", "", implode(',',$filters['val'])));?>'
    });
    <?php } ?>
    <?php }?>
    <?php } ?>
</script>
<!-- End Adobe Launch Code -->
