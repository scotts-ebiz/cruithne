interface ProductInterface {
    drupalproductid: String
            @doc(description: "Drupal Product Id")
            @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\DrupalProductId")
    problems_filter: [String]
            @doc(description: "ProblemsFilter")
            @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\ProblemsFilter")
    goals_filter: [String]
            @doc(description: "GoalsFilter")
            @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\GoalsFilter")
    mylawn_sunlight: [String]
            @doc(description: "MylawnSunlight")
            @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\MylawnSunlight")
    mylawn_weed_type: [String]
            @doc(description: "MylawnWeedType")
            @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\MylawnWeedType")
    mylawn_grass_types: [String]
            @doc(description: "MylawnGrassTypes")
            @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\MylawnGrassTypes")
    mylawn_lawn_condition: [String]
            @doc(description: "MylawnLawnCondition")
            @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\MylawnLawnCondition")
    mylawn_lawn_zone: [String]
            @doc(description: "MylawnLawnZone")
            @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\MylawnLawnZone")
    sync_with_my_lawn_app: [String]
            @doc(description: "SyncWithMyLawnApp")
            @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\SyncWithMyLawnApp")
    mylawn_categories: [String]
            @doc(description: "MylawnCategories")
            @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\MylawnCategories")
    status: String
        @doc(description: "Status")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\Status")
    size: [String]
        @doc(description: "Size")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\Size")
    visibility: String
        @doc(description: "Visibility")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\Visibility")
    country_of_manufacture: [String]
        @doc(description: "CountryOfManufacture")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\CountryOfManufacture")
    bundle: [String]
        @doc(description: "Bundle")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\Bundle")
    bundle_type: [String]
        @doc(description: "BundleType")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\BundleType")
    company: [String]
        @doc(description: "Company")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\Company")
    lawn_zone_available_in: [String]
        @doc(description: "LawnZoneAvailableIn")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\LawnZoneAvailableIn")
    lawn_zone_excluded: [String]
        @doc(description: "LawnZoneExcluded")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\LawnZoneExcluded")
    sap_base_unit: [String]
        @doc(description: "SapBaseUnit")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\SapBaseUnit")
    sap_brand: [String]
        @doc(description: "SapBrand")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\SapBrand")
    sap_division: [String]
        @doc(description: "SapDivision")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\SapDivision")
    sap_ean_category: [String]
        @doc(description: "SapEanCategory")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\SapEanCategory")
    sap_ean_category_each: [String]
        @doc(description: "SapEanCategoryEach")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\SapEanCategoryEach")
    sap_lwh_unit: [String]
        @doc(description: "SapLwhUnit")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\SapLwhUnit")
    sap_lwh_unit_each: [String]
        @doc(description: "SapLwhUnitEach")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\SapLwhUnitEach")
    sap_material_group: [String]
        @doc(description: "SapMaterialGroup")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\SapMaterialGroup")
    sap_material_group_pkg_materials: [String]
        @doc(description: "SapMaterialGroupPkgMaterials")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\SapMaterialGroupPkgMaterials")
    sap_material_status: [String]
        @doc(description: "SapMaterialStatus")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\SapMaterialStatus")
    sap_material_type: [String]
        @doc(description: "SapMaterialType")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\SapMaterialType")
    sap_subbrand: [String]
        @doc(description: "SapSubbrand")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\SapSubbrand")
    sap_volume_unit: [String]
        @doc(description: "SapVolumeUnit")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\SapVolumeUnit")
    sap_volume_unit_each: [String]
        @doc(description: "SapVolumeUnitEach")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\SapVolumeUnitEach")
    sap_weight_unit: [String]
        @doc(description: "SapWeightUnit")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\SapWeightUnit")
    sap_weight_unit_each: [String]
        @doc(description: "SapWeightUnitEach")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\SapWeightUnitEach")
    state_not_allowed: [String]
        @doc(description: "StateNotAllowed")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\StateNotAllowed")
    product_websites: [String]
        @doc(description: "ProductWebsites")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\ProductWebsites")
    states_available_in: [String]
        @doc(description: "StatesAvailableIn")
        @resolver(class: "\\SMG\\CatalogGraphQl\\Model\\Resolver\\Product\\StatesAvailableIn")
}
